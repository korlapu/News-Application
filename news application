// Express Backend (server/index.js)
const express = require('express');
const cors = require('cors');
const axios = require('axios');

const app = express();
const PORT = 5000;

app.use(cors());

const NEWS_API_KEY = '6c552afb';
const NEWS_API_URL = 'https://newsapi.org/v2/top-headlines';

app.get('/api/news', async (req, res) => {
  try {
    const { country = 'us', category = 'general' } = req.query;
    const response = await axios.get(NEWS_API_URL, {
      params: {
        apiKey: NEWS_API_KEY,
        country,
        category,
      },
    });
    res.json(response.data);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Error fetching news data' });
  }
});

app.listen(PORT, () => {
  console.log(Server is running on http://localhost:${PORT});
});

// React Frontend (src/App.js)
import React, { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [news, setNews] = useState([]);
  const [country, setCountry] = useState('us');
  const [category, setCategory] = useState('general');

  useEffect(() => {
    const fetchNews = async () => {
      try {
        const response = await fetch(
          http://localhost:5000/api/news?country=${country}&category=${category}
        );
        const data = await response.json();
        setNews(data.articles);
      } catch (error) {
        console.error('Error fetching news:', error);
      }
    };

    fetchNews();
  }, [country, category]);

  return (
    <div className="App">
      <header>
        <h1>News Application</h1>
      </header>
      <div className="controls">
        <label htmlFor="country">Country: </label>
        <select id="country" value={country} onChange={(e) => setCountry(e.target.value)}>
          <option value="us">United States</option>
          <option value="gb">United Kingdom</option>
          <option value="in">India</option>
          <option value="au">Australia</option>
        </select>
        <label htmlFor="category">Category: </label>
        <select id="category" value={category} onChange={(e) => setCategory(e.target.value)}>
          <option value="general">General</option>
          <option value="business">Business</option>
          <option value="entertainment">Entertainment</option>
          <option value="health">Health</option>
          <option value="science">Science</option>
          <option value="sports">Sports</option>
          <option value="technology">Technology</option>
        </select>
      </div>
      <div className="news-container">
        {news.length > 0 ? (
          news.map((article, index) => (
            <div className="news-card" key={index}>
              <h2>{article.title}</h2>
              <img src={article.urlToImage} alt={article.title} className="news-image" />
              <p>{article.description}</p>
              <a href={article.url} target="_blank" rel="noopener noreferrer">
                Read more
              </a>
            </div>
          ))
        ) : (
          <p>Loading news...</p>
        )}
      </div>
    </div>
  );
}

export default App;

// React Frontend (src/App.css)
body {
  margin: 0;
  font-family: Arial, sans-serif;
  background-color: #f9f9f9;
}

.App {
  text-align: center;
}

header {
  background: #282c34;
  padding: 20px;
  color: white;
  font-size: 1.5rem;
}

.controls {
  margin: 20px;
  display: flex;
  justify-content: center;
  gap: 15px;
}

label {
  font-size: 1rem;
  margin-right: 5px;
}

select {
  margin: 0 10px;
  padding: 5px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

.news-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  padding: 20px;
  gap: 20px;
}

.news-card {
  width: 300px;
  background: white;
  padding: 15px;
  border: 1px solid #ddd;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease;
}

.news-card:hover {
  transform: scale(1.05);
}

.news-image {
  width: 100%;
  height: auto;
  border-radius: 5px;
  margin-bottom: 10px;
}

.news-card h2 {
  font-size: 1.2rem;
  margin: 10px 0;
}

.news-card p {
  font-size: 1rem;
  margin: 10px 0;
  color: #555;
}

.news-card a {
  text-decoration: none;
  color: #1e90ff;
  font-weight: bold;
  font-size: 1rem;
}

.news-card a:hover {
  text-decoration: underline;
}
